# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install Terraform 0.13.5'
  inputs:
    terraformVersion: 0.13.5

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : init'
  inputs:
    provider: aws
    workingDirectory: '$(System.DefaultWorkingDirectory)/kunduso_LearnTerraform/Get-Started-AWS-009-CI-CD-AzureDevops'
    backendServiceAWS: 'AWS-Terraform'
    backendAWSBucketName: 'AWS_Service_Connection'
    backendAWSKey: 'tf/Get-Started-AWS-009-CI-CD-AzureDevops/terraform.tfstate'

# Your build pipeline references a secret variable named ‘access_key’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
# Your build pipeline references a secret variable named ‘secret_key’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it secret. See https://go.microsoft.com/fwlink/?linkid=865972
# variables:
#   region: 'us-east-1'

# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform : plan'
#   inputs:
#     provider: aws
#     command: plan
#     workingDirectory: '$(System.DefaultWorkingDirectory)/kunduso_LearnTerraform/Get-Started-AWS-009-CI-CD-AzureDevops'
#     commandOptions: '-var "region=$(region)" -var "access_key=$(access_key)" -var "secret_key=$(secret_key)" -out demo.tfplan'
#     environmentServiceNameAWS: 'AWS-Terraform'
#     backendServiceAWS: 'AWS-Terraform'
#     backendAWSBucketName: 'skundu-terraform-remote-state'
#     backendAWSKey: 'tf/Get-Started-AWS-009-CI-CD-AzureDevops/terraform.tfstate'

# - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
#   displayName: 'Terraform : validate and apply'
#   inputs:
#     provider: aws
#     command: apply
#     workingDirectory: '$(System.DefaultWorkingDirectory)/kunduso_LearnTerraform/Get-Started-AWS-009-CI-CD-AzureDevops'
#     commandOptions: '"demo.tfplan"'
#     environmentServiceNameAWS: 'AWS-Terraform'
#     backendServiceAWS: 'AWS-Terraform'
#     backendAWSBucketName: 'skundu-terraform-remote-state'
#     backendAWSKey: 'tf/Get-Started-AWS-001/terraform.tfstate'
